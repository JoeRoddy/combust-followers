{
  "dependencies": {
    "users": "latest",
    "notifications": "latest"
  },
  "installation": {
    "src/components/users/SocialContacts.jsx": {
      "imports": ["import FollowersList from \"../followers/FollowersList\";"],
      "after": {
        "pattern": "const componentsByMode = {",
        "code": [
          "\n\tFollowers: history => <FollowersList displayFollowers history={history} />,",
          "\tFollowing: history => <FollowersList displayFollowing history={history} />,"
        ]
      }
    },
    "src/components/users/Profile.jsx": {
      "imports": ["import followerStore from \"../../stores/FollowerStore\";"],
      "replace": {
        "pattern": "alert(\"combust install followers\");\n",
        "code": [
          "followerStore.followUser(userId);",
          "alert('Following User');"
        ]
      }
    }
  },
  "installation_mobile": {
    "src/components/users/Profile.js": {
      "imports": ["import followerStore from \"../../stores/FollowerStore\";"],
      "replace": [
        {
          "pattern": "alert(\"Execute from your terminal:\", \"combust install followers\");\n",
          "code": [
            "followerStore.followUser(userId);",
            "alert('Following User');"
          ]
        },
        {
          "pattern": "isFollowed = false",
          "code": ["isFollowed = followerStore.isFollowing(userId)"]
        }
      ]
    },
    "src/components/reusable/SideMenu.js": {
      "after": {
        "pattern": "const COMBUST_MENU_ITEMS = [",
        "code": [
          "{title: \"Followers\",icon: \"person-add\",onPress: () => nav.navigate(\"FollowersList\", { userId: user.id })},"
        ]
      }
    },
    "src/components/Routes.js": {
      "imports": ["import FollowersList from \"./followers/FollowersList\";"],
      "after": {
        "pattern": "const COMBUST_SCREENS = {",
        "code": [
          "FollowersList: { screen: FollowersList, path: \"/FollowersList\" },"
        ]
      }
    }
  },
  "rules": {
    ".read": true,
    "followedIdsByUser": {
      "$uid": {
        "$influencerUid": {
          ".write": "auth.uid === $uid"
        }
      }
    },
    "followerIdsByUser": {
      "$influencerUid": {
        "$followerUid": {
          ".write": "auth.uid === $followerUid"
        }
      }
    }
  }
}
